/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2014 izi-js contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
!function(a){function b(a,b){return a.iziDelegate=function(b,c){function d(d,e,f){var g=a.proxy(e,f);return d=d instanceof a?d:a(d),d.on(b,c,g),function(){d.off(b,c,g)}}return c?d:function(a){return c=a,d}},!function(b){b.behavior.impl.jQuery={defaultPerformFunction:"perform",observeWidget:function(b,c,d,e){function f(a){return a?c.matchesModifiers(!!a.shiftKey,!!a.controlKey,!!a.altKey)?(c.shouldStopPropagation()&&a.stopPropagation(),c.shouldPreventDefault()&&a.preventDefault(),d.apply(e,arguments)):void 0:d.apply(e,arguments)}var g=b instanceof a?b:a(b),h=c.getEventType();return g.on(h,f),function(){g.off(h,f)}},observeKeyStroke:function(){throw new Error("jQuery framework doesn't support keystrokes handling. Instead of izi.events.keyDown()/izi.events.keyUp() please use just plain 'keypress', 'keydown' or 'keyup' strings")}}}(b.module),!function(a){a.binding.impl.jquery={}}(b.module),!function(b){function c(b,c){return"value"===c&&b instanceof a&&b.is("input[type=checkbox]")}function d(a,b,c,d,e){return a.on("change",e),function(){a.off("change",e)}}function e(a){if(a.length>1){var b=[];return a.each(function(a,c){c.checked&&b.push(c.value)}),b}return a.prop("checked")}function f(a,c,d){a.length>1?a.each(function(a,c){c.checked=b.utils.arrayContains(d,c.value)}):a.prop("checked",d),a.trigger("change")}b.binding.impl.jquery.checkBoxObserver=b.binding.impl.createObserver(c,d),b.binding.impl.jquery.readCheckBoxValue=b.binding.impl.createReader(c,e),b.binding.impl.jquery.writeCheckBoxValue=b.binding.impl.createWriter(c,f)}(b.module),!function(b){var c=function(a){this.config=a};c.prototype.val=function(){var a=this.config.target;return this.createBinding(function(b){a.val(b)})},c.prototype.html=function(){var a=this.config.target;return this.createBinding(function(b){a.html(b)})},c.prototype.text=function(){var a=this.config.target;return this.createBinding(function(b){a.text(b)})},c.prototype.attr=function(a){var b=this.config.target;return this.createBinding(function(c){a?b.attr(a,c):b.attr(c)})},c.prototype.css=function(a){var b=this.config.target;return this.createBinding(function(c){a?b.css(a,c):b.css(c)})},c.prototype.prop=function(a){var b=this.config.target;return this.createBinding(function(c){a?b.prop(a,c):b.prop(c)})},c.prototype.data=function(a){var b=this.config.target;return this.createBinding(function(c){a?b.data(a,c):b.data(c)})},c.prototype.createBinding=function(a){return new b.binding.Binding(this.config.withTarget(a))},b.binding.ValueOf.prototype.to$=function(c){var d=c instanceof a?c:a(c);return this.config.target=d,new b.binding.impl.jquery.JQueryTarget(this.config)},b.binding.impl.jquery.JQueryTarget=c}(b.module),!function(b){function c(b,c){return"value"===c&&b instanceof a&&b.is("input[type=radio]")}function d(a,b,c,d,e){return a.on("change",e),function(){a.off("change",e)}}function e(a){var b;return a.each(function(a,c){return c.checked?(b=c.value,!1):!0}),b}function f(a,b,c){a.each(function(a,b){b.checked=b.value===c}),a.trigger("change")}b.binding.impl.jquery.radioGroupObserver=b.binding.impl.createObserver(c,d),b.binding.impl.jquery.readRadioGroupValue=b.binding.impl.createReader(c,e),b.binding.impl.jquery.writeRadioGroupValue=b.binding.impl.createWriter(c,f)}(b.module),!function(b){b.binding.impl.jquery.readVal=function(){function c(a){return a.val()}function d(b,c){return"value"===c&&b instanceof a}return b.binding.impl.createReader(d,c)}()}(b.module),!function(b){function c(b,c){return"value"===c&&b instanceof a&&b.is("select")}function d(a,b,c,d,e){return a.on("change",e),function(){a.off("change",e)}}function e(b){return b.is("select[multiple]")?a.map(b.find("option:selected"),function(b){return a(b).val()}):b.find("option:selected").val()}function f(c,d,e){if(c.is("select[multiple]")){var f=c.prop("options");b.utils.forEach(f,function(c){c.selected=b.utils.arrayContains(e,a(c).val())})}else c.find("option[value='"+e+"']").prop("selected",!0);c.trigger("change")}b.binding.impl.jquery.selectObserver=b.binding.impl.createObserver(c,d),b.binding.impl.jquery.readSelectValue=b.binding.impl.createReader(c,e),b.binding.impl.jquery.writeSelectValue=b.binding.impl.createWriter(c,f)}(b.module),!function(b){b.binding.impl.jquery.textFieldObserver=function(){function c(b,c){return"value"===c&&b instanceof a&&(b.is("input[type=text]")||b.is("textarea")||b.is("input[type=password]")||b.is("input:not([type])"))}function d(a,b,c,d,f){return a.on(e,f),function(){a.off(e,f)}}var e="change input textInput keyup dragdrop propertychange";return b.binding.impl.createObserver(c,d)}()}(b.module),!function(b){b.binding.impl.jquery.writeVal=function(){function c(a,b,c){a.val(c),a.trigger("change")}function d(b,c){return"value"===c&&b instanceof a}return b.binding.impl.createWriter(d,c)}()}(b.module),!function(a){a.binding.impl.jQuery={changeObservers:[a.binding.impl.jquery.textFieldObserver,a.binding.impl.jquery.checkBoxObserver,a.binding.impl.jquery.radioGroupObserver,a.binding.impl.jquery.selectObserver],valueReaders:[a.binding.impl.jquery.readCheckBoxValue,a.binding.impl.jquery.readRadioGroupValue,a.binding.impl.jquery.readSelectValue,a.binding.impl.jquery.readVal,a.binding.impl.readByCapitalizedGetter,a.binding.impl.readFromOwnedProperty,a.binding.impl.readByFunction,a.binding.impl.readByGet,a.binding.impl.readFromProperty],valueWriters:[a.binding.impl.jquery.writeCheckBoxValue,a.binding.impl.jquery.writeRadioGroupValue,a.binding.impl.jquery.writeSelectValue,a.binding.impl.jquery.writeVal,a.binding.impl.writeByFunction,a.binding.impl.writeByCapitalizedSetter,a.binding.impl.writeToOwnedProperty,a.binding.impl.writeToFunction,a.binding.impl.writeBySet,a.binding.impl.writeToProperty]}}(b.module),!function(b){b.queue.impl.jQuery={createEventDispatcher:function(){return document.createElement("span")},dispatchEvent:function(b,c,d){a(b).trigger(c,d)}}}(b.module),!function(a){var c="jquery";a.registerFramework(c,{binding:a.binding.impl.jQuery,behavior:a.behavior.impl.jQuery,queue:a.queue.impl.jQuery}),b=b.newInstance(c)}(b.module),b}"function"==typeof define&&"object"==typeof define.amd&&"dojotoolkit.org"!==define.amd.vendor?define(["jquery","izi-js"],b):"object"==typeof exports?module.exports=b(require("jquery"),require("izi-js")):a.izi=b(a.$,a.izi)}(this);
//# sourceMappingURL=izi-js-jquery.min.js.map